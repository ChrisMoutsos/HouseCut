var Household = require('../models/household');
var User = require('../models/user.js');

var jwt = require('jsonwebtoken');
var jwtDecode = require('jwt-decode');
var crypto = require('crypto');
var rand = require('csprng');

module.exports = function (req, res) {
  var token = req.body.token;
  var houseHoldName = req.body.houseHoldName;
  var houseHoldPassword = req.body.houseHoldPassword;

  var decoded = jwtDecode(token);
  var currentUserId = decoded.id;


  // Access the User
  User.findOne({ '_id' : currentUserId}, function (err, user) {
    if (err) {
      throw err;
    }

    if (user) {
      if (user.householdId != 0)
        {
          res.json({
            success: false,
            message: "User already has a household."
          });
        }
      else {

        Household.findOne({ 'houseHoldName' : houseHoldName}, function(err, household) {
					if (err) {
						throw (err);
					}
					// If it exists
					if (household) {
            var hash_pw = crypto.createHash('sha512').update(user.salt + houseHoldPassword).digest("hex");
            if (hash_pw == household.hashed_password) {
            // Add user to household
            User.update({ '_id': currentUserId }, {
                householdId: household._id,
                admin: true
              }, function (err) {
                if (err)
                {
                  throw (err);
                }
              });
            // Update Household
            Household.update({ 'houseHoldName' : houseHoldName, funciton (err) {
                HouseholdMembers.push(currentUserId);
                res.json({
                  success: true,
                  message: "User has been added to the household"
                });
            }});
					  }
            else {
              res.json ({
                success: false,
                message: "Incorrect household password"
              });
            }
        }
        else {
          res.json({
            success: false,
            message: "Household does not exist"
          });
      }

    });


  }


// End of Function
}
else {
  res.json({
      sucess: false,
      message: "User does not exist"
  });
}
})
